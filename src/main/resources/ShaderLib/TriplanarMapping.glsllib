vec3 calculateBlending(vec3 vNormal, float maxBlending) {
    vec3 blending = abs(vNormal);
    blending = normalize(max(blending, maxBlending));
    float b = (blending.x + blending.y + blending.z);
    blending /= vec3(b, b, b);
    return blending;
}

vec4 triplanarColor(sampler2D tex, vec3 coords, float scale, vec3 blending) {
    return texture2D(tex, coords.yz * scale) * blending.x +
           texture2D(tex, coords.xz * scale) * blending.y +
           texture2D(tex, coords.xy * scale) * blending.z;
}